/*
 * defaultTitle
 *
 * defaultDescription
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateRequest {
    /// The name of the index to be created. The maximum length is 45 characters.
    #[serde(rename = "name")]
    pub name: String,
    /// The dimensions of the vectors to be inserted in the index
    #[serde(rename = "dimension")]
    pub dimension: i32,
    /// The type of vector index. Pinecone supports 'approximated'.
    #[serde(rename = "index_type", skip_serializing_if = "Option::is_none")]
    pub index_type: Option<String>,
    /// The distance metric to be used for similarity search. You can use 'euclidean', 'cosine', or 'dotproduct'.
    #[serde(rename = "metric", skip_serializing_if = "Option::is_none")]
    pub metric: Option<String>,
    /// The number of pods for the index to use,including replicas.
    #[serde(rename = "pods", skip_serializing_if = "Option::is_none")]
    pub pods: Option<i32>,
    /// The number of replicas. Replicas duplicate your index. They provide higher availability and throughput.
    #[serde(rename = "replicas", skip_serializing_if = "Option::is_none")]
    pub replicas: Option<i32>,
    /// The number of shards to be used in the index.
    #[serde(rename = "shards", skip_serializing_if = "Option::is_none")]
    pub shards: Option<i32>,
    /// The type of pod to use. One of `s1`, `p1`, or `p2` appended with `.` and one of `x1`, `x2`, `x4`, or `x8`.
    #[serde(rename = "pod_type", skip_serializing_if = "Option::is_none")]
    pub pod_type: Option<String>,
    #[serde(rename = "index_config", skip_serializing_if = "Option::is_none")]
    pub index_config: Option<Box<crate::models::CreateRequestIndexConfig>>,
    #[serde(rename = "metadata_config", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metadata_config: Option<Option<Box<crate::models::CreateRequestMetadataConfig>>>,
    /// The name of the collection to create an index from
    #[serde(rename = "source_collection", skip_serializing_if = "Option::is_none")]
    pub source_collection: Option<String>,
}

impl CreateRequest {
    pub fn new(name: String, dimension: i32) -> CreateRequest {
        CreateRequest {
            name,
            dimension,
            index_type: None,
            metric: None,
            pods: None,
            replicas: None,
            shards: None,
            pod_type: None,
            index_config: None,
            metadata_config: None,
            source_collection: None,
        }
    }
}


