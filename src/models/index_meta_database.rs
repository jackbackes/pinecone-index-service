/*
 * defaultTitle
 *
 * defaultDescription
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IndexMetaDatabase {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "dimension", skip_serializing_if = "Option::is_none")]
    pub dimension: Option<i32>,
    #[serde(rename = "index_type", skip_serializing_if = "Option::is_none")]
    pub index_type: Option<String>,
    #[serde(rename = "metric", skip_serializing_if = "Option::is_none")]
    pub metric: Option<String>,
    #[serde(rename = "pods", skip_serializing_if = "Option::is_none")]
    pub pods: Option<i32>,
    #[serde(rename = "replicas", skip_serializing_if = "Option::is_none")]
    pub replicas: Option<i32>,
    #[serde(rename = "shards", skip_serializing_if = "Option::is_none")]
    pub shards: Option<i32>,
    #[serde(rename = "pod_type", skip_serializing_if = "Option::is_none")]
    pub pod_type: Option<String>,
    #[serde(rename = "index_config", skip_serializing_if = "Option::is_none")]
    pub index_config: Option<Box<crate::models::IndexMetaDatabaseIndexConfig>>,
    #[serde(rename = "metadata_config", skip_serializing_if = "Option::is_none")]
    pub metadata_config: Option<Box<crate::models::IndexMetaDatabaseMetadataConfig>>,
    #[serde(rename = "source_collection", skip_serializing_if = "Option::is_none")]
    pub source_collection: Option<String>,
}

impl IndexMetaDatabase {
    pub fn new() -> IndexMetaDatabase {
        IndexMetaDatabase {
            name: None,
            dimension: None,
            index_type: None,
            metric: None,
            pods: None,
            replicas: None,
            shards: None,
            pod_type: None,
            index_config: None,
            metadata_config: None,
            source_collection: None,
        }
    }
}


